package carscrossing;

import java.util.Scanner;
/*
 *Lane object class
 */

/**
 *
 * @author Pro
 */
public class Lane {
    //Lane needs definative direction for future builds.
    Car [] Cars;
    String flow;
    String name;
    int length;
    boolean carMax;
    Lights stopOrGo;


    String getName(){
        return name;
    }
    
    void setName(String value){
        name = value;
    }
    int getLength(){
        return length;
    }
    void setLength(int value){
        length = value;
        Cars = new Car[value];
    }









    public static void main(String[] args) {

        int menuSelect = 1;
        int H_street;
        int V_street;
        int chanceCarH_street;
        int chanceCarV_street;
        int totalLanes;





        while (menuSelect != 7) {

            // I assumed option 7 was nessesary to add to the menu.

            System.out.println("=== MENU ===\n1. Set Number of horizontal lanes"
                    + " (H-street) [min 1, max 3]\n2. Set Number of vertical lanes"
                    + " (V-street) [min 1, max 4]\n3. Set Probability of a car"
                    + " entering H-street [min 0, max 1]\n4. Set Probability of a"
                    + " car entering V-street [min 0, max 1]\n5. Run one simulation"
                    + " cycle\n6. Set and run number of simulation cycles"
                    + " [min 1, max 10]\n7. Exit\nEnter your choice>");


            Scanner keyboard = new Scanner(System.in);
            menuSelect = keyboard.nextInt();


            if (menuSelect == 1) {
                // Get number of horizontal streets as H_street from user.
                System.out.println("Please enter number of horizontal lanes: ");
                H_street= keyboard.nextInt();
            }

            if (menuSelect == 2) {
                // Get number of vertical streets as H_street from user.
                System.out.println("Please enter number of vertical lanes: ");
                V_street= keyboard.nextInt();
            }

            if (menuSelect == 3) {
                // Get value for random calculation from user.
                System.out.println("Please enter a value for the"
                        + "Probability of a car entering "
                        + "a horizontal street [min 0, max 1]: ");
                chanceCarH_street= keyboard.nextInt();
            }

            if (menuSelect == 4) {
                // Get value for random calculation from user.
                System.out.println("Please enter a value for the"
                        + "Probability of a car entering "
                        + "a vertical street [min 0, max 1]: ");
                chanceCarV_street= keyboard.nextInt();
            }
            if (menuSelect == 5){// or menuSelect==7~~if menuselect... {
                // I assume that one cycle refers to a small point in time
                // in wich a car can be generated by a lane or
                // move to the next available position
                
                Lane[] Lanes = new Lane[totalLanes];
                int laneCount=1;

                for (int x=0; x<H_street; ++1) {
                    String i = "H_street"+Integer.toString(laneCount);
                    Lanes[x] = new Lane();
                    Lanes[x].setName(i);
                    // line not implemented yet ~~ Lanes[x].flow();
                    Lanes[x].setLength(V_street+20);
                    laneCount+=1;

                }
                
                laneCount=1;

                for (int x=H_street; x<totalLanes; ++1){
                    String i = "V_street"+Integer.toString(laneCount);
                    Lanes[x] = new Lane();
                    Lanes[x].setName(i);
                    // line not implemented yet ~~ Lanes[x].flow();
                    Lanes[x].setLength(H_street+20);
                    laneCount+=1;

                }


                    






                    }

                }

                }





            if (menuSelect==7){
                break;
            }



        }



    }
}


// This code can be used later for the input of direction
// of a particualer lane.
/*
String[] inputArray = new String[4];
inputArray[0]="South to North: ";
inputArray[1]="North to South: ";
inputArray[2]="West to East: ";
inputArray[3]="East to West: ";
int LanesSN;
int LanesNS;
int LanesWE;
int LanesEW;

for (int k=0; k<4; ++k) {

Scanner keyboard = new Scanner(System.in);
// Ask user for input
System.out.println("Please enter the numer of lanes running"
+ inputArray[k]);
if (k==0) {
LanesSN = keyboard.nextInt();
}
if (k==1) {
LanesNS = keyboard.nextInt();
}
if (k==2) {
LanesWE = keyboard.nextInt();
}
if (k==3) {
LanesEW = keyboard.nextInt();
}
 *
 *
 */
// The reason for creating these variables is as individual
// lanes are created they will span accross other lanes,
// thus increasing their array length by the amount of lanes
// they cross.
/*
int horizLanes;

Scanner keyboard = new Scanner(System.in);
// Ask user for input
System.out.println("Please enter the numer of lanes running horizontal");

horizLanes = keyboard.nextInt();



int vertLanes;

Scanner keyboard = new Scanner(System.in);
// Ask user for input
System.out.println("Please enter the numer of lanes running vertical");

horizLanes = keyboard.nextInt();



int totalLanes  = (horizLanes + vertLanes);
int nL = 1;

for (int x=0; x<totalLanes ; ++x ){

if(LanesSN>0){
String i = String.
}




}







} */
